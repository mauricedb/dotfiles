---
description: Git Instructions
globs:
---

# Git Conventional Commits

Follow the Conventional Commits specification for all commit messages to ensure consistency and automated versioning.

## Commit Message Structure

## Types

- `feat`: New features (correlates with MINOR version)
- `fix`: Bug fixes (correlates with PATCH version)
- `docs`: Documentation changes
- `style`: Code style changes (formatting, semicolons, etc)
- `refactor`: Code refactoring
- `perf`: Performance improvements
- `test`: Adding or updating tests
- `chore`: Maintenance tasks, dependencies, etc
- `build`: Build system or external dependency changes
- `ci`: CI/CD changes

## Rules

1. Always prefix commits with a type: `feat:`, `fix:`, etc.
2. Use imperative mood in description ("add" not "added")
3. Keep description under 72 characters
4. Use scope for specific components: `feat(auth):`, `fix(api):`
5. Mark breaking changes with `BREAKING CHANGE:` in body
